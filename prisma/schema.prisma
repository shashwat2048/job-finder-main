// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Job {
  id              String @id @default(auto()) @map("_id") @db.ObjectId
  title           String
  description     String
  location        String
  salary          Int
  employment_type String @default("fulltime")
  job_type        String @default("on-site")
}

model Openings {
  id              String  @id @default(auto()) @map("_id") @db.ObjectId
  title           String
  description     String
  location        String
  salary          Int
  employment_type String  @default("fulltime")
  job_type        String  @default("on-site")
  company_id      String  @db.ObjectId
  company         Company @relation(fields: [company_id], references: [id])
}

model User {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  email    String   @unique
  password String
  role     String
  company  Company?
  review   Review[]
  application Application[]
}

model Company {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String
  ownerId     String     @unique @db.ObjectId
  owner       User       @relation(fields: [ownerId], references: [id])
  jobs        Openings[]
}

model Review {
  id         String @id @default(auto()) @map("_id") @db.ObjectId
  content    String
  user_id    String @db.ObjectId
  user       User   @relation(fields: [user_id], references: [id])
  company_id String
}

model Application{
  id         String @id @default(auto()) @map("_id") @db.ObjectId
  user_id String @db.ObjectId
  user       User   @relation(fields: [user_id], references: [id])
  job_id   String
}